# Health check endpoint configuration
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always

# Server configuration
server.port=8081

# ========== OpenAI API 설정 ==========
# 환경변수에서 API 키 주입 (보안)
openai.api-key=${OPENAI_API_KEY:your-default-api-key-here}
# SSAFY GMS 엔드포인트
openai.base-url=${OPENAI_BASE_URL:https://gms.ssafy.io/gmsapi/api.openai.com/v1}
# 사용할 모델
openai.model=${OPENAI_MODEL:gpt-4.1}
# 최대 토큰 수
openai.max-tokens=${OPENAI_MAX_TOKENS:1500}
# 창의성 수준 (0.0-2.0)
openai.temperature=${OPENAI_TEMPERATURE:0.7}
# 타임아웃 (초)
openai.timeout-seconds=${OPENAI_TIMEOUT:30}

# ========== Spring Boot 설정 ==========
spring.application.name=taro-service

# 비동기 처리 설정
spring.task.execution.pool.core-size=2
spring.task.execution.pool.max-size=5
spring.task.execution.pool.queue-capacity=100
spring.task.execution.pool.keep-alive=60s
spring.task.scheduling.pool.size=2

# 서버 최적화 설정
server.servlet.context-path=/
server.tomcat.max-connections=200
server.tomcat.threads.max=200
server.tomcat.threads.min-spare=10

# ========== 로깅 설정 ==========
# AI 서비스 디버그 로깅
logging.level.org.com.taro.service.ai=DEBUG
# WebClient HTTP 로깅 (개발 시에만)
logging.level.org.springframework.web.reactive.function.client=DEBUG
# 루트 로거
logging.level.root=INFO
# Spring 프레임워크
logging.level.org.springframework=INFO
# Hibernate (JPA 사용 시)
logging.level.org.hibernate=WARN

# 로그 출력 패턴
logging.pattern.console=%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n

# 로그 파일 설정 (선택사항)
logging.file.name=logs/taro-service.log
logging.file.max-size=10MB
logging.file.max-history=30

# ========== 캐시 설정 (향후 사용) ==========
# AI 응답 캐싱 설정
cache.taro-results.ttl=3600
cache.taro-results.max-entries=1000
